/*
 * generated by Xtext 2.9.0
 */
grammar InternalKwdl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.itemis.xtext.example.kwdl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.itemis.xtext.example.kwdl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.itemis.xtext.example.kwdl.services.KwdlGrammarAccess;

}
@parser::members {
	private KwdlGrammarAccess grammarAccess;

	public void setGrammarAccess(KwdlGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getActionRullsAssignment()); }
		(rule__Model__ActionRullsAssignment)*
		{ after(grammarAccess.getModelAccess().getActionRullsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionRulls
entryRuleActionRulls
:
{ before(grammarAccess.getActionRullsRule()); }
	 ruleActionRulls
{ after(grammarAccess.getActionRullsRule()); } 
	 EOF 
;

// Rule ActionRulls
ruleActionRulls 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionRullsAccess().getGroup()); }
		(rule__ActionRulls__Group__0)
		{ after(grammarAccess.getActionRullsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRullsAccess().getSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getActionRullsAccess().getSTRINGTerminalRuleCall_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionRullsAccess().getIDTerminalRuleCall_4_1()); }
		RULE_ID
		{ after(grammarAccess.getActionRullsAccess().getIDTerminalRuleCall_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group__0__Impl
	rule__ActionRulls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getRuleKeyword_0()); }
	'rule'
	{ after(grammarAccess.getActionRullsAccess().getRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group__1__Impl
	rule__ActionRulls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getNameAssignment_1()); }
	(rule__ActionRulls__NameAssignment_1)
	{ after(grammarAccess.getActionRullsAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group__2__Impl
	rule__ActionRulls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getGroup_2()); }
	(rule__ActionRulls__Group_2__0)?
	{ after(grammarAccess.getActionRullsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group__3__Impl
	rule__ActionRulls__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getActionRullsAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getAlternatives_4()); }
	(rule__ActionRulls__Alternatives_4)*
	{ after(grammarAccess.getActionRullsAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionRulls__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group_2__0__Impl
	rule__ActionRulls__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getActionRullsAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group_2__1__Impl
	rule__ActionRulls__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getLableAssignment_2_1()); }
	(rule__ActionRulls__LableAssignment_2_1)
	{ after(grammarAccess.getActionRullsAccess().getLableAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionRulls__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionRullsAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getActionRullsAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getOptionalAssignment_0()); }
	(rule__Parameter__OptionalAssignment_0)
	{ after(grammarAccess.getParameterAccess().getOptionalAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getParameterKeyword_1()); }
	'parameter'
	{ after(grammarAccess.getParameterAccess().getParameterKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_2()); }
	(rule__Parameter__NameAssignment_2)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_3()); }
	(rule__Parameter__Group_3__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__1__Impl
	rule__Parameter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_3_1()); }
	(rule__Parameter__Group_3_1__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__2__Impl
	rule__Parameter__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_3_2()); }
	(rule__Parameter__Group_3_2__0)?
	{ after(grammarAccess.getParameterAccess().getGroup_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_3_3()); }
	'}'
	{ after(grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__0__Impl
	rule__Parameter__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValuePoolKeyword_3_1_0()); }
	'ValuePool'
	{ after(grammarAccess.getParameterAccess().getValuePoolKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__1__Impl
	rule__Parameter__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_3_1_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__2__Impl
	rule__Parameter__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_3_1_2()); }
	'['
	{ after(grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__3__Impl
	rule__Parameter__Group_3_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValuePoolAssignment_3_1_3()); }
	(rule__Parameter__ValuePoolAssignment_3_1_3)
	{ after(grammarAccess.getParameterAccess().getValuePoolAssignment_3_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__4__Impl
	rule__Parameter__Group_3_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getGroup_3_1_4()); }
	(rule__Parameter__Group_3_1_4__0)*
	{ after(grammarAccess.getParameterAccess().getGroup_3_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_3_1_5()); }
	']'
	{ after(grammarAccess.getParameterAccess().getRightSquareBracketKeyword_3_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1_4__0__Impl
	rule__Parameter__Group_3_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getCommaKeyword_3_1_4_0()); }
	','
	{ after(grammarAccess.getParameterAccess().getCommaKeyword_3_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getValuePoolAssignment_3_1_4_1()); }
	(rule__Parameter__ValuePoolAssignment_3_1_4_1)
	{ after(grammarAccess.getParameterAccess().getValuePoolAssignment_3_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_2__0__Impl
	rule__Parameter__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDefaultValueKeyword_3_2_0()); }
	'DefaultValue'
	{ after(grammarAccess.getParameterAccess().getDefaultValueKeyword_3_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_2__1__Impl
	rule__Parameter__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_3_2_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_3_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getDefaultValueAssignment_3_2_2()); }
	(rule__Parameter__DefaultValueAssignment_3_2_2)
	{ after(grammarAccess.getParameterAccess().getDefaultValueAssignment_3_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ActionRullsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getActionRullsActionRullsParserRuleCall_0()); }
		ruleActionRulls
		{ after(grammarAccess.getModelAccess().getActionRullsActionRullsParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRullsAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionRullsAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionRulls__LableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionRullsAccess().getLableIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionRullsAccess().getLableIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__OptionalAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0()); }
		(
			{ before(grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0()); }
			'optional'
			{ after(grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0()); }
		)
		{ after(grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValuePoolAssignment_3_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValuePoolAssignment_3_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DefaultValueAssignment_3_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getDefaultValueSTRINGTerminalRuleCall_3_2_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getParameterAccess().getDefaultValueSTRINGTerminalRuleCall_3_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
