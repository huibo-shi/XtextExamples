/*
 * generated by Xtext 2.9.1
 */
grammar InternalKwdl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.itemis.xtext.example.kwdl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.itemis.xtext.example.kwdl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.itemis.xtext.example.kwdl.services.KwdlGrammarAccess;

}

@parser::members {

 	private KwdlGrammarAccess grammarAccess;

    public InternalKwdlParser(TokenStream input, KwdlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected KwdlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getActionRullsActionRullsParserRuleCall_0());
			}
			lv_actionRulls_0_0=ruleActionRulls
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"actionRulls",
					lv_actionRulls_0_0,
					"fr.itemis.xtext.example.kwdl.Kwdl.ActionRulls");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleActionRulls
entryRuleActionRulls returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRullsRule()); }
	iv_ruleActionRulls=ruleActionRulls
	{ $current=$iv_ruleActionRulls.current; }
	EOF;

// Rule ActionRulls
ruleActionRulls returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rule'
		{
			newLeafNode(otherlv_0, grammarAccess.getActionRullsAccess().getRuleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionRullsAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRullsRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getActionRullsAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					lv_lable_3_0=RULE_ID
					{
						newLeafNode(lv_lable_3_0, grammarAccess.getActionRullsAccess().getLableIDTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRullsRule());
						}
						setWithLastConsumed(
							$current,
							"lable",
							lv_lable_3_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getActionRullsAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getActionRullsAccess().getColonKeyword_3());
		}
		(
			this_STRING_6=RULE_STRING
			{
				newLeafNode(this_STRING_6, grammarAccess.getActionRullsAccess().getSTRINGTerminalRuleCall_4_0());
			}
			    |
			this_ID_7=RULE_ID
			{
				newLeafNode(this_ID_7, grammarAccess.getActionRullsAccess().getIDTerminalRuleCall_4_1());
			}
		)*
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_optional_0_0='optional'
				{
					newLeafNode(lv_optional_0_0, grammarAccess.getParameterAccess().getOptionalOptionalKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed($current, "optional", true, "optional");
				}
			)
		)
		otherlv_1='Parameter'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParameterKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_3='{'
			{
				newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				otherlv_4='ValuePool'
				{
					newLeafNode(otherlv_4, grammarAccess.getParameterAccess().getValuePoolKeyword_3_1_0());
				}
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getParameterAccess().getColonKeyword_3_1_1());
				}
				otherlv_6='['
				{
					newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_3_1_2());
				}
				(
					(
						lv_valuePool_7_0=RULE_STRING
						{
							newLeafNode(lv_valuePool_7_0, grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_3_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParameterRule());
							}
							addWithLastConsumed(
								$current,
								"valuePool",
								lv_valuePool_7_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
				(
					otherlv_8=','
					{
						newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getCommaKeyword_3_1_4_0());
					}
					(
						(
							lv_valuePool_9_0=RULE_STRING
							{
								newLeafNode(lv_valuePool_9_0, grammarAccess.getParameterAccess().getValuePoolSTRINGTerminalRuleCall_3_1_4_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getParameterRule());
								}
								addWithLastConsumed(
									$current,
									"valuePool",
									lv_valuePool_9_0,
									"org.eclipse.xtext.common.Terminals.STRING");
							}
						)
					)
				)*
				otherlv_10=']'
				{
					newLeafNode(otherlv_10, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_3_1_5());
				}
			)?
			(
				otherlv_11='DefaultValue'
				{
					newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getDefaultValueKeyword_3_2_0());
				}
				otherlv_12=':'
				{
					newLeafNode(otherlv_12, grammarAccess.getParameterAccess().getColonKeyword_3_2_1());
				}
				(
					(
						lv_defaultValue_13_0=RULE_STRING
						{
							newLeafNode(lv_defaultValue_13_0, grammarAccess.getParameterAccess().getDefaultValueSTRINGTerminalRuleCall_3_2_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getParameterRule());
							}
							setWithLastConsumed(
								$current,
								"defaultValue",
								lv_defaultValue_13_0,
								"org.eclipse.xtext.common.Terminals.STRING");
						}
					)
				)
			)?
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getParameterAccess().getRightCurlyBracketKeyword_3_3());
			}
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
