/*
 * generated by Xtext 2.9.1
 */
package fr.itemis.xtext.example.kwdl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class KwdlGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.itemis.xtext.example.kwdl.Kwdl.Model");
		private final Assignment cActionRullsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cActionRullsActionRullsParserRuleCall_0 = (RuleCall)cActionRullsAssignment.eContents().get(0);
		
		//Model:
		//	actionRulls+=ActionRulls*;
		@Override public ParserRule getRule() { return rule; }
		
		//actionRulls+=ActionRulls*
		public Assignment getActionRullsAssignment() { return cActionRullsAssignment; }
		
		//ActionRulls
		public RuleCall getActionRullsActionRullsParserRuleCall_0() { return cActionRullsActionRullsParserRuleCall_0; }
	}
	public class ActionRullsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.itemis.xtext.example.kwdl.Kwdl.ActionRulls");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLableAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cLableIDTerminalRuleCall_2_1_0 = (RuleCall)cLableAssignment_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_4_1 = (RuleCall)cAlternatives_4.eContents().get(1);
		
		//ActionRulls:
		//	'rule' name=ID ('(' lable=ID ')')? ':' (STRING | ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//'rule' name=ID ('(' lable=ID ')')? ':' (STRING | ID)*
		public Group getGroup() { return cGroup; }
		
		//'rule'
		public Keyword getRuleKeyword_0() { return cRuleKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('(' lable=ID ')')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }
		
		//lable=ID
		public Assignment getLableAssignment_2_1() { return cLableAssignment_2_1; }
		
		//ID
		public RuleCall getLableIDTerminalRuleCall_2_1_0() { return cLableIDTerminalRuleCall_2_1_0; }
		
		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//(STRING | ID)*
		public Alternatives getAlternatives_4() { return cAlternatives_4; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_4_0() { return cSTRINGTerminalRuleCall_4_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_4_1() { return cIDTerminalRuleCall_4_1; }
	}
	public class KeywordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.itemis.xtext.example.kwdl.Kwdl.Keyword");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cKeywordKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParametersAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParametersParameterParserRuleCall_3_0 = (RuleCall)cParametersAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Keyword:
		//	'Keyword' name=ID '{'
		//	parameters+=Parameter*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Keyword' name=ID '{' parameters+=Parameter* '}'
		public Group getGroup() { return cGroup; }
		
		//'Keyword'
		public Keyword getKeywordKeyword_0() { return cKeywordKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//parameters+=Parameter*
		public Assignment getParametersAssignment_3() { return cParametersAssignment_3; }
		
		//Parameter
		public RuleCall getParametersParameterParserRuleCall_3_0() { return cParametersParameterParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.itemis.xtext.example.kwdl.Kwdl.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOptionalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOptionalOptionalKeyword_0_0 = (Keyword)cOptionalAssignment_0.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cValuePoolKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cValuePoolAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cValuePoolSTRINGTerminalRuleCall_3_1_3_0 = (RuleCall)cValuePoolAssignment_3_1_3.eContents().get(0);
		private final Group cGroup_3_1_4 = (Group)cGroup_3_1.eContents().get(4);
		private final Keyword cCommaKeyword_3_1_4_0 = (Keyword)cGroup_3_1_4.eContents().get(0);
		private final Assignment cValuePoolAssignment_3_1_4_1 = (Assignment)cGroup_3_1_4.eContents().get(1);
		private final RuleCall cValuePoolSTRINGTerminalRuleCall_3_1_4_1_0 = (RuleCall)cValuePoolAssignment_3_1_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_1_5 = (Keyword)cGroup_3_1.eContents().get(5);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cDefaultValueKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cColonKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cDefaultValueAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cDefaultValueSTRINGTerminalRuleCall_3_2_2_0 = (RuleCall)cDefaultValueAssignment_3_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//Parameter:
		//	optional?='optional' 'Parameter' name=ID ('{' ('ValuePool' ':' '[' valuePool+=STRING (',' valuePool+=STRING)* ']')?
		//	('DefaultValue' ':' defaultValue=STRING)?
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//optional?='optional' 'Parameter' name=ID ('{' ('ValuePool' ':' '[' valuePool+=STRING (',' valuePool+=STRING)* ']')?
		//('DefaultValue' ':' defaultValue=STRING)? '}')?
		public Group getGroup() { return cGroup; }
		
		//optional?='optional'
		public Assignment getOptionalAssignment_0() { return cOptionalAssignment_0; }
		
		//'optional'
		public Keyword getOptionalOptionalKeyword_0_0() { return cOptionalOptionalKeyword_0_0; }
		
		//'Parameter'
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
		
		//('{' ('ValuePool' ':' '[' valuePool+=STRING (',' valuePool+=STRING)* ']')? ('DefaultValue' ':' defaultValue=STRING)?
		//'}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }
		
		//('ValuePool' ':' '[' valuePool+=STRING (',' valuePool+=STRING)* ']')?
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'ValuePool'
		public Keyword getValuePoolKeyword_3_1_0() { return cValuePoolKeyword_3_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3_1_2() { return cLeftSquareBracketKeyword_3_1_2; }
		
		//valuePool+=STRING
		public Assignment getValuePoolAssignment_3_1_3() { return cValuePoolAssignment_3_1_3; }
		
		//STRING
		public RuleCall getValuePoolSTRINGTerminalRuleCall_3_1_3_0() { return cValuePoolSTRINGTerminalRuleCall_3_1_3_0; }
		
		//(',' valuePool+=STRING)*
		public Group getGroup_3_1_4() { return cGroup_3_1_4; }
		
		//','
		public Keyword getCommaKeyword_3_1_4_0() { return cCommaKeyword_3_1_4_0; }
		
		//valuePool+=STRING
		public Assignment getValuePoolAssignment_3_1_4_1() { return cValuePoolAssignment_3_1_4_1; }
		
		//STRING
		public RuleCall getValuePoolSTRINGTerminalRuleCall_3_1_4_1_0() { return cValuePoolSTRINGTerminalRuleCall_3_1_4_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_3_1_5() { return cRightSquareBracketKeyword_3_1_5; }
		
		//('DefaultValue' ':' defaultValue=STRING)?
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'DefaultValue'
		public Keyword getDefaultValueKeyword_3_2_0() { return cDefaultValueKeyword_3_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_2_1() { return cColonKeyword_3_2_1; }
		
		//defaultValue=STRING
		public Assignment getDefaultValueAssignment_3_2_2() { return cDefaultValueAssignment_3_2_2; }
		
		//STRING
		public RuleCall getDefaultValueSTRINGTerminalRuleCall_3_2_2_0() { return cDefaultValueSTRINGTerminalRuleCall_3_2_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_3() { return cRightCurlyBracketKeyword_3_3; }
	}
	
	
	private final ModelElements pModel;
	private final ActionRullsElements pActionRulls;
	private final KeywordElements pKeyword;
	private final ParameterElements pParameter;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public KwdlGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pActionRulls = new ActionRullsElements();
		this.pKeyword = new KeywordElements();
		this.pParameter = new ParameterElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.itemis.xtext.example.kwdl.Kwdl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	actionRulls+=ActionRulls*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//ActionRulls:
	//	'rule' name=ID ('(' lable=ID ')')? ':' (STRING | ID)*;
	public ActionRullsElements getActionRullsAccess() {
		return pActionRulls;
	}
	
	public ParserRule getActionRullsRule() {
		return getActionRullsAccess().getRule();
	}
	
	//Keyword:
	//	'Keyword' name=ID '{'
	//	parameters+=Parameter*
	//	'}';
	public KeywordElements getKeywordAccess() {
		return pKeyword;
	}
	
	public ParserRule getKeywordRule() {
		return getKeywordAccess().getRule();
	}
	
	//Parameter:
	//	optional?='optional' 'Parameter' name=ID ('{' ('ValuePool' ':' '[' valuePool+=STRING (',' valuePool+=STRING)* ']')?
	//	('DefaultValue' ':' defaultValue=STRING)?
	//	'}')?;
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
