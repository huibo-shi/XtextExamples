/*
 * generated by Xtext 2.9.1
 */
grammar InternalTest;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.itemis.xtext.example.test.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.itemis.xtext.example.test.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.itemis.xtext.example.test.services.TestGrammarAccess;

}
@parser::members {
	private TestGrammarAccess grammarAccess;

	public void setGrammarAccess(TestGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleTgtScript
entryRuleTgtScript
:
{ before(grammarAccess.getTgtScriptRule()); }
	 ruleTgtScript
{ after(grammarAccess.getTgtScriptRule()); } 
	 EOF 
;

// Rule TgtScript
ruleTgtScript 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTgtScriptAccess().getGroup()); }
		(rule__TgtScript__Group__0)
		{ after(grammarAccess.getTgtScriptAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclareVariable
entryRuleDeclareVariable
:
{ before(grammarAccess.getDeclareVariableRule()); }
	 ruleDeclareVariable
{ after(grammarAccess.getDeclareVariableRule()); } 
	 EOF 
;

// Rule DeclareVariable
ruleDeclareVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclareVariableAccess().getGroup()); }
		(rule__DeclareVariable__Group__0)
		{ after(grammarAccess.getDeclareVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAfterShell
entryRuleAfterShell
:
{ before(grammarAccess.getAfterShellRule()); }
	 ruleAfterShell
{ after(grammarAccess.getAfterShellRule()); } 
	 EOF 
;

// Rule AfterShell
ruleAfterShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAfterShellAccess().getGroup()); }
		(rule__AfterShell__Group__0)
		{ after(grammarAccess.getAfterShellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepShell
entryRuleStepShell
:
{ before(grammarAccess.getStepShellRule()); }
	 ruleStepShell
{ after(grammarAccess.getStepShellRule()); } 
	 EOF 
;

// Rule StepShell
ruleStepShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepShellAccess().getGroup()); }
		(rule__StepShell__Group__0)
		{ after(grammarAccess.getStepShellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreShell
entryRulePreShell
:
{ before(grammarAccess.getPreShellRule()); }
	 rulePreShell
{ after(grammarAccess.getPreShellRule()); } 
	 EOF 
;

// Rule PreShell
rulePreShell 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreShellAccess().getGroup()); }
		(rule__PreShell__Group__0)
		{ after(grammarAccess.getPreShellAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTgtStatement
entryRuleTgtStatement
:
{ before(grammarAccess.getTgtStatementRule()); }
	 ruleTgtStatement
{ after(grammarAccess.getTgtStatementRule()); } 
	 EOF 
;

// Rule TgtStatement
ruleTgtStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTgtStatementAccess().getAlternatives()); }
		(rule__TgtStatement__Alternatives)
		{ after(grammarAccess.getTgtStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTgtStep
entryRuleTgtStep
:
{ before(grammarAccess.getTgtStepRule()); }
	 ruleTgtStep
{ after(grammarAccess.getTgtStepRule()); } 
	 EOF 
;

// Rule TgtStep
ruleTgtStep 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTgtStepAccess().getGroup()); }
		(rule__TgtStep__Group__0)
		{ after(grammarAccess.getTgtStepAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtStatementAccess().getActionCallAssignment_0()); }
		(rule__TgtStatement__ActionCallAssignment_0)
		{ after(grammarAccess.getTgtStatementAccess().getActionCallAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTgtStatementAccess().getCommentAssignment_1()); }
		(rule__TgtStatement__CommentAssignment_1)
		{ after(grammarAccess.getTgtStatementAccess().getCommentAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTgtStatementAccess().getStepAssignment_2()); }
		(rule__TgtStatement__StepAssignment_2)
		{ after(grammarAccess.getTgtStatementAccess().getStepAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtScript__Group__0__Impl
	rule__TgtScript__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtScriptAccess().getPreShellAssignment_0()); }
	(rule__TgtScript__PreShellAssignment_0)
	{ after(grammarAccess.getTgtScriptAccess().getPreShellAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtScript__Group__1__Impl
	rule__TgtScript__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtScriptAccess().getStepShellAssignment_1()); }
	(rule__TgtScript__StepShellAssignment_1)
	{ after(grammarAccess.getTgtScriptAccess().getStepShellAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtScript__Group__2__Impl
	rule__TgtScript__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtScriptAccess().getAfterShellAssignment_2()); }
	(rule__TgtScript__AfterShellAssignment_2)
	{ after(grammarAccess.getTgtScriptAccess().getAfterShellAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtScript__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtScriptAccess().getDeclareVariableAssignment_3()); }
	(rule__TgtScript__DeclareVariableAssignment_3)
	{ after(grammarAccess.getTgtScriptAccess().getDeclareVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DeclareVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareVariable__Group__0__Impl
	rule__DeclareVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareVariableAccess().getDeclareVariableKeyword_0()); }
	'\u58F0\u660E\u53D8\u91CF declareVariable'
	{ after(grammarAccess.getDeclareVariableAccess().getDeclareVariableKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DeclareVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclareVariableAccess().getVariablesAssignment_1()); }
	(rule__DeclareVariable__VariablesAssignment_1)*
	{ after(grammarAccess.getDeclareVariableAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
	(rule__Variable__NameAssignment_0)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValuesAssignment_2()); }
	(rule__Variable__ValuesAssignment_2)
	{ after(grammarAccess.getVariableAccess().getValuesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getGroup_3()); }
	(rule__Variable__Group_3__0)*
	{ after(grammarAccess.getVariableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3__0__Impl
	rule__Variable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getVariableAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getValuesAssignment_3_1()); }
	(rule__Variable__ValuesAssignment_3_1)
	{ after(grammarAccess.getVariableAccess().getValuesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AfterShell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterShell__Group__0__Impl
	rule__AfterShell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterShellAccess().getAfterShellKeyword_0()); }
	'\u540E\u7F6E\u811A\u672C afterShell'
	{ after(grammarAccess.getAfterShellAccess().getAfterShellKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterShell__Group__1__Impl
	rule__AfterShell__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterShellAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getAfterShellAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AfterShell__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAfterShellAccess().getStatementsAssignment_2()); }
	(rule__AfterShell__StatementsAssignment_2)*
	{ after(grammarAccess.getAfterShellAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepShell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepShell__Group__0__Impl
	rule__StepShell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepShellAccess().getStepShellKeyword_0()); }
	'\u64CD\u4F5C\u6B65\u9AA4 stepShell'
	{ after(grammarAccess.getStepShellAccess().getStepShellKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepShell__Group__1__Impl
	rule__StepShell__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepShellAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getStepShellAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepShell__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepShellAccess().getStatementsAssignment_2()); }
	(rule__StepShell__StatementsAssignment_2)*
	{ after(grammarAccess.getStepShellAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreShell__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreShell__Group__0__Impl
	rule__PreShell__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreShellAccess().getPreShellKeyword_0()); }
	'\u9884\u7F6E\u811A\u672C preShell'
	{ after(grammarAccess.getPreShellAccess().getPreShellKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreShell__Group__1__Impl
	rule__PreShell__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreShellAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getPreShellAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreShell__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreShellAccess().getStatementsAssignment_2()); }
	(rule__PreShell__StatementsAssignment_2)*
	{ after(grammarAccess.getPreShellAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TgtStep__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__0__Impl
	rule__TgtStep__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getCommercialAtKeyword_0()); }
	'@'
	{ after(grammarAccess.getTgtStepAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__1__Impl
	rule__TgtStep__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
	{ after(grammarAccess.getTgtStepAccess().getIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__2__Impl
	rule__TgtStep__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getGroup_2()); }
	(rule__TgtStep__Group_2__0)?
	{ after(grammarAccess.getTgtStepAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__3__Impl
	rule__TgtStep__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getStatementsAssignment_3()); }
	(rule__TgtStep__StatementsAssignment_3)*
	{ after(grammarAccess.getTgtStepAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__4__Impl
	rule__TgtStep__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getCommercialAtKeyword_4()); }
	'@'
	{ after(grammarAccess.getTgtStepAccess().getCommercialAtKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getEndKeyword_5()); }
	'end'
	{ after(grammarAccess.getTgtStepAccess().getEndKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TgtStep__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group_2__0__Impl
	rule__TgtStep__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getColonKeyword_2_0()); }
	':'
	{ after(grammarAccess.getTgtStepAccess().getColonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TgtStep__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTgtStepAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
	{ after(grammarAccess.getTgtStepAccess().getIDTerminalRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TgtScript__PreShellAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtScriptAccess().getPreShellPreShellParserRuleCall_0_0()); }
		rulePreShell
		{ after(grammarAccess.getTgtScriptAccess().getPreShellPreShellParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__StepShellAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtScriptAccess().getStepShellStepShellParserRuleCall_1_0()); }
		ruleStepShell
		{ after(grammarAccess.getTgtScriptAccess().getStepShellStepShellParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__AfterShellAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtScriptAccess().getAfterShellAfterShellParserRuleCall_2_0()); }
		ruleAfterShell
		{ after(grammarAccess.getTgtScriptAccess().getAfterShellAfterShellParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtScript__DeclareVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtScriptAccess().getDeclareVariableDeclareVariableParserRuleCall_3_0()); }
		ruleDeclareVariable
		{ after(grammarAccess.getTgtScriptAccess().getDeclareVariableDeclareVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclareVariable__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclareVariableAccess().getVariablesVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getDeclareVariableAccess().getVariablesVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ValuesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getVariableAccess().getValuesSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ValuesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVariableAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AfterShell__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAfterShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
		ruleTgtStatement
		{ after(grammarAccess.getAfterShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepShell__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStepShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
		ruleTgtStatement
		{ after(grammarAccess.getStepShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreShell__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
		ruleTgtStatement
		{ after(grammarAccess.getPreShellAccess().getStatementsTgtStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStatement__ActionCallAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtStatementAccess().getActionCallACTION_CALLTerminalRuleCall_0_0()); }
		RULE_ACTION_CALL
		{ after(grammarAccess.getTgtStatementAccess().getActionCallACTION_CALLTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStatement__CommentAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtStatementAccess().getCommentTGT_COMMENTTerminalRuleCall_1_0()); }
		RULE_TGT_COMMENT
		{ after(grammarAccess.getTgtStatementAccess().getCommentTGT_COMMENTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStatement__StepAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtStatementAccess().getStepTgtStepParserRuleCall_2_0()); }
		ruleTgtStep
		{ after(grammarAccess.getTgtStatementAccess().getStepTgtStepParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TgtStep__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTgtStepAccess().getStatementsTgtStatementParserRuleCall_3_0()); }
		ruleTgtStatement
		{ after(grammarAccess.getTgtStepAccess().getStatementsTgtStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ACTION_CALL : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_TGT_COMMENT : ('$'|'--') ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? (RULE_IDENTIFIER_START|RULE_UNICODE_ESCAPE) (RULE_IDENTIFIER_PART|RULE_UNICODE_ESCAPE)*;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

fragment RULE_UNICODE_ESCAPE : '\\' 'u' (RULE_HEX_DIGIT (RULE_HEX_DIGIT (RULE_HEX_DIGIT RULE_HEX_DIGIT?)?)?)?;

fragment RULE_IDENTIFIER_START : ('$'|'A'..'Z'|'_'|'a'..'z'|'\u00A2'..'\u00A5'|'\u00AA'|'\u00B5'|'\u00BA'|'\u00C0'..'\u00D6'|'\u00D8'..'\u00F6'|'\u00F8'..'\u0236'|'\u0250'..'\u02C1'|'\u02C6'..'\u02D1'|'\u02E0'..'\u02E4'|'\u02EE'|'\u037A'|'\u0386'|'\u0388'..'\u038A'|'\u038C'|'\u038E'..'\u03A1'|'\u03A3'..'\u03CE'|'\u03D0'..'\u03F5'|'\u03F7'..'\u03FB'|'\u0400'..'\u0481'|'\u048A'..'\u04CE'|'\u04D0'..'\u04F5'|'\u04F8'..'\u04F9'|'\u0500'..'\u050F'|'\u0531'..'\u0556'|'\u0559'|'\u0561'..'\u0587'|'\u05D0'..'\u05EA'|'\u05F0'..'\u05F2'|'\u0621'..'\u063A'|'\u0640'..'\u064A'|'\u066E'..'\u066F'|'\u0671'..'\u06D3'|'\u06D5'|'\u06E5'..'\u06E6'|'\u06EE'..'\u06EF'|'\u06FA'..'\u06FC'|'\u06FF'|'\u0710'|'\u0712'..'\u072F'|'\u074D'..'\u074F'|'\u0780'..'\u07A5'|'\u07B1'|'\u0904'..'\u0939'|'\u093D'|'\u0950'|'\u0958'..'\u0961'|'\u0985'..'\u098C'|'\u098F'..'\u0990'|'\u0993'..'\u09A8'|'\u09AA'..'\u09B0'|'\u09B2'|'\u09B6'..'\u09B9'|'\u09BD'|'\u09DC'..'\u09DD'|'\u09DF'..'\u09E1'|'\u09F0'..'\u09F3'|'\u0A05'..'\u0A0A'|'\u0A0F'..'\u0A10'|'\u0A13'..'\u0A28'|'\u0A2A'..'\u0A30'|'\u0A32'..'\u0A33'|'\u0A35'..'\u0A36'|'\u0A38'..'\u0A39'|'\u0A59'..'\u0A5C'|'\u0A5E'|'\u0A72'..'\u0A74'|'\u0A85'..'\u0A8D'|'\u0A8F'..'\u0A91'|'\u0A93'..'\u0AA8'|'\u0AAA'..'\u0AB0'|'\u0AB2'..'\u0AB3'|'\u0AB5'..'\u0AB9'|'\u0ABD'|'\u0AD0'|'\u0AE0'..'\u0AE1'|'\u0AF1'|'\u0B05'..'\u0B0C'|'\u0B0F'..'\u0B10'|'\u0B13'..'\u0B28'|'\u0B2A'..'\u0B30'|'\u0B32'..'\u0B33'|'\u0B35'..'\u0B39'|'\u0B3D'|'\u0B5C'..'\u0B5D'|'\u0B5F'..'\u0B61'|'\u0B71'|'\u0B83'|'\u0B85'..'\u0B8A'|'\u0B8E'..'\u0B90'|'\u0B92'..'\u0B95'|'\u0B99'..'\u0B9A'|'\u0B9C'|'\u0B9E'..'\u0B9F'|'\u0BA3'..'\u0BA4'|'\u0BA8'..'\u0BAA'|'\u0BAE'..'\u0BB5'|'\u0BB7'..'\u0BB9'|'\u0BF9'|'\u0C05'..'\u0C0C'|'\u0C0E'..'\u0C10'|'\u0C12'..'\u0C28'|'\u0C2A'..'\u0C33'|'\u0C35'..'\u0C39'|'\u0C60'..'\u0C61'|'\u0C85'..'\u0C8C'|'\u0C8E'..'\u0C90'|'\u0C92'..'\u0CA8'|'\u0CAA'..'\u0CB3'|'\u0CB5'..'\u0CB9'|'\u0CBD'|'\u0CDE'|'\u0CE0'..'\u0CE1'|'\u0D05'..'\u0D0C'|'\u0D0E'..'\u0D10'|'\u0D12'..'\u0D28'|'\u0D2A'..'\u0D39'|'\u0D60'..'\u0D61'|'\u0D85'..'\u0D96'|'\u0D9A'..'\u0DB1'|'\u0DB3'..'\u0DBB'|'\u0DBD'|'\u0DC0'..'\u0DC6'|'\u0E01'..'\u0E30'|'\u0E32'..'\u0E33'|'\u0E3F'..'\u0E46'|'\u0E81'..'\u0E82'|'\u0E84'|'\u0E87'..'\u0E88'|'\u0E8A'|'\u0E8D'|'\u0E94'..'\u0E97'|'\u0E99'..'\u0E9F'|'\u0EA1'..'\u0EA3'|'\u0EA5'|'\u0EA7'|'\u0EAA'..'\u0EAB'|'\u0EAD'..'\u0EB0'|'\u0EB2'..'\u0EB3'|'\u0EBD'|'\u0EC0'..'\u0EC4'|'\u0EC6'|'\u0EDC'..'\u0EDD'|'\u0F00'|'\u0F40'..'\u0F47'|'\u0F49'..'\u0F6A'|'\u0F88'..'\u0F8B'|'\u1000'..'\u1021'|'\u1023'..'\u1027'|'\u1029'..'\u102A'|'\u1050'..'\u1055'|'\u10A0'..'\u10C5'|'\u10D0'..'\u10F8'|'\u1100'..'\u1159'|'\u115F'..'\u11A2'|'\u11A8'..'\u11F9'|'\u1200'..'\u1206'|'\u1208'..'\u1246'|'\u1248'|'\u124A'..'\u124D'|'\u1250'..'\u1256'|'\u1258'|'\u125A'..'\u125D'|'\u1260'..'\u1286'|'\u1288'|'\u128A'..'\u128D'|'\u1290'..'\u12AE'|'\u12B0'|'\u12B2'..'\u12B5'|'\u12B8'..'\u12BE'|'\u12C0'|'\u12C2'..'\u12C5'|'\u12C8'..'\u12CE'|'\u12D0'..'\u12D6'|'\u12D8'..'\u12EE'|'\u12F0'..'\u130E'|'\u1310'|'\u1312'..'\u1315'|'\u1318'..'\u131E'|'\u1320'..'\u1346'|'\u1348'..'\u135A'|'\u13A0'..'\u13F4'|'\u1401'..'\u166C'|'\u166F'..'\u1676'|'\u1681'..'\u169A'|'\u16A0'..'\u16EA'|'\u16EE'..'\u16F0'|'\u1700'..'\u170C'|'\u170E'..'\u1711'|'\u1720'..'\u1731'|'\u1740'..'\u1751'|'\u1760'..'\u176C'|'\u176E'..'\u1770'|'\u1780'..'\u17B3'|'\u17D7'|'\u17DB'..'\u17DC'|'\u1820'..'\u1877'|'\u1880'..'\u18A8'|'\u1900'..'\u191C'|'\u1950'..'\u196D'|'\u1970'..'\u1974'|'\u1D00'..'\u1D6B'|'\u1E00'..'\u1E9B'|'\u1EA0'..'\u1EF9'|'\u1F00'..'\u1F15'|'\u1F18'..'\u1F1D'|'\u1F20'..'\u1F45'|'\u1F48'..'\u1F4D'|'\u1F50'..'\u1F57'|'\u1F59'|'\u1F5B'|'\u1F5D'|'\u1F5F'..'\u1F7D'|'\u1F80'..'\u1FB4'|'\u1FB6'..'\u1FBC'|'\u1FBE'|'\u1FC2'..'\u1FC4'|'\u1FC6'..'\u1FCC'|'\u1FD0'..'\u1FD3'|'\u1FD6'..'\u1FDB'|'\u1FE0'..'\u1FEC'|'\u1FF2'..'\u1FF4'|'\u1FF6'..'\u1FFC'|'\u203F'..'\u2040'|'\u2054'|'\u2071'|'\u207F'|'\u20A0'..'\u20B1'|'\u2102'|'\u2107'|'\u210A'..'\u2113'|'\u2115'|'\u2119'..'\u211D'|'\u2124'|'\u2126'|'\u2128'|'\u212A'..'\u212D'|'\u212F'..'\u2131'|'\u2133'..'\u2139'|'\u213D'..'\u213F'|'\u2145'..'\u2149'|'\u2160'..'\u2183'|'\u3005'..'\u3007'|'\u3021'..'\u3029'|'\u3031'..'\u3035'|'\u3038'..'\u303C'|'\u3041'..'\u3096'|'\u309D'..'\u309F'|'\u30A1'..'\u30FF'|'\u3105'..'\u312C'|'\u3131'..'\u318E'|'\u31A0'..'\u31B7'|'\u31F0'..'\u31FF'|'\u3400'..'\u4DB5'|'\u4E00'..'\u9FA5'|'\uA000'..'\uA48C'|'\uAC00'..'\uD7A3'|'\uF900'..'\uFA2D'|'\uFA30'..'\uFA6A'|'\uFB00'..'\uFB06'|'\uFB13'..'\uFB17'|'\uFB1D'|'\uFB1F'..'\uFB28'|'\uFB2A'..'\uFB36'|'\uFB38'..'\uFB3C'|'\uFB3E'|'\uFB40'..'\uFB41'|'\uFB43'..'\uFB44'|'\uFB46'..'\uFBB1'|'\uFBD3'..'\uFD3D'|'\uFD50'..'\uFD8F'|'\uFD92'..'\uFDC7'|'\uFDF0'..'\uFDFC'|'\uFE33'..'\uFE34'|'\uFE4D'..'\uFE4F'|'\uFE69'|'\uFE70'..'\uFE74'|'\uFE76'..'\uFEFC'|'\uFF04'|'\uFF21'..'\uFF3A'|'\uFF3F'|'\uFF41'..'\uFF5A'|'\uFF65'..'\uFFBE'|'\uFFC2'..'\uFFC7'|'\uFFCA'..'\uFFCF'|'\uFFD2'..'\uFFD7'|'\uFFDA'..'\uFFDC'|'\uFFE0'..'\uFFE1'|'\uFFE5'..'\uFFE6');

fragment RULE_IDENTIFIER_PART : (RULE_IDENTIFIER_START|RULE_IDENTIFIER_PART_IMPL);

fragment RULE_IDENTIFIER_PART_IMPL : ('\u0000'..'\b'|'\u000E'..'\u001B'|'0'..'9'|'\u007F'..'\u009F'|'\u00AD'|'\u0300'..'\u0357'|'\u035D'..'\u036F'|'\u0483'..'\u0486'|'\u0591'..'\u05A1'|'\u05A3'..'\u05B9'|'\u05BB'..'\u05BD'|'\u05BF'|'\u05C1'..'\u05C2'|'\u05C4'|'\u0600'..'\u0603'|'\u0610'..'\u0615'|'\u064B'..'\u0658'|'\u0660'..'\u0669'|'\u0670'|'\u06D6'..'\u06DD'|'\u06DF'..'\u06E4'|'\u06E7'..'\u06E8'|'\u06EA'..'\u06ED'|'\u06F0'..'\u06F9'|'\u070F'|'\u0711'|'\u0730'..'\u074A'|'\u07A6'..'\u07B0'|'\u0901'..'\u0903'|'\u093C'|'\u093E'..'\u094D'|'\u0951'..'\u0954'|'\u0962'..'\u0963'|'\u0966'..'\u096F'|'\u0981'..'\u0983'|'\u09BC'|'\u09BE'..'\u09C4'|'\u09C7'..'\u09C8'|'\u09CB'..'\u09CD'|'\u09D7'|'\u09E2'..'\u09E3'|'\u09E6'..'\u09EF'|'\u0A01'..'\u0A03'|'\u0A3C'|'\u0A3E'..'\u0A42'|'\u0A47'..'\u0A48'|'\u0A4B'..'\u0A4D'|'\u0A66'..'\u0A71'|'\u0A81'..'\u0A83'|'\u0ABC'|'\u0ABE'..'\u0AC5'|'\u0AC7'..'\u0AC9'|'\u0ACB'..'\u0ACD'|'\u0AE2'..'\u0AE3'|'\u0AE6'..'\u0AEF'|'\u0B01'..'\u0B03'|'\u0B3C'|'\u0B3E'..'\u0B43'|'\u0B47'..'\u0B48'|'\u0B4B'..'\u0B4D'|'\u0B56'..'\u0B57'|'\u0B66'..'\u0B6F'|'\u0B82'|'\u0BBE'..'\u0BC2'|'\u0BC6'..'\u0BC8'|'\u0BCA'..'\u0BCD'|'\u0BD7'|'\u0BE7'..'\u0BEF'|'\u0C01'..'\u0C03'|'\u0C3E'..'\u0C44'|'\u0C46'..'\u0C48'|'\u0C4A'..'\u0C4D'|'\u0C55'..'\u0C56'|'\u0C66'..'\u0C6F'|'\u0C82'..'\u0C83'|'\u0CBC'|'\u0CBE'..'\u0CC4'|'\u0CC6'..'\u0CC8'|'\u0CCA'..'\u0CCD'|'\u0CD5'..'\u0CD6'|'\u0CE6'..'\u0CEF'|'\u0D02'..'\u0D03'|'\u0D3E'..'\u0D43'|'\u0D46'..'\u0D48'|'\u0D4A'..'\u0D4D'|'\u0D57'|'\u0D66'..'\u0D6F'|'\u0D82'..'\u0D83'|'\u0DCA'|'\u0DCF'..'\u0DD4'|'\u0DD6'|'\u0DD8'..'\u0DDF'|'\u0DF2'..'\u0DF3'|'\u0E31'|'\u0E34'..'\u0E3A'|'\u0E47'..'\u0E4E'|'\u0E50'..'\u0E59'|'\u0EB1'|'\u0EB4'..'\u0EB9'|'\u0EBB'..'\u0EBC'|'\u0EC8'..'\u0ECD'|'\u0ED0'..'\u0ED9'|'\u0F18'..'\u0F19'|'\u0F20'..'\u0F29'|'\u0F35'|'\u0F37'|'\u0F39'|'\u0F3E'..'\u0F3F'|'\u0F71'..'\u0F84'|'\u0F86'..'\u0F87'|'\u0F90'..'\u0F97'|'\u0F99'..'\u0FBC'|'\u0FC6'|'\u102C'..'\u1032'|'\u1036'..'\u1039'|'\u1040'..'\u1049'|'\u1056'..'\u1059'|'\u1369'..'\u1371'|'\u1712'..'\u1714'|'\u1732'..'\u1734'|'\u1752'..'\u1753'|'\u1772'..'\u1773'|'\u17B4'..'\u17D3'|'\u17DD'|'\u17E0'..'\u17E9'|'\u180B'..'\u180D'|'\u1810'..'\u1819'|'\u18A9'|'\u1920'..'\u192B'|'\u1930'..'\u193B'|'\u1946'..'\u194F'|'\u200C'..'\u200F'|'\u202A'..'\u202E'|'\u2060'..'\u2063'|'\u206A'..'\u206F'|'\u20D0'..'\u20DC'|'\u20E1'|'\u20E5'..'\u20EA'|'\u302A'..'\u302F'|'\u3099'..'\u309A'|'\uFB1E'|'\uFE00'..'\uFE0F'|'\uFE20'..'\uFE23'|'\uFEFF'|'\uFF10'..'\uFF19'|'\uFFF9'..'\uFFFB');

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
