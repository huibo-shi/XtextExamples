/**
 * generated by Xtext 2.9.1
 */
package fr.itemis.xtext.example.test.test.impl;

import fr.itemis.xtext.example.test.test.TestPackage;
import fr.itemis.xtext.example.test.test.TgtStatement;
import fr.itemis.xtext.example.test.test.TgtStep;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tgt Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.itemis.xtext.example.test.test.impl.TgtStatementImpl#getActionCall <em>Action Call</em>}</li>
 *   <li>{@link fr.itemis.xtext.example.test.test.impl.TgtStatementImpl#getComment <em>Comment</em>}</li>
 *   <li>{@link fr.itemis.xtext.example.test.test.impl.TgtStatementImpl#getStep <em>Step</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TgtStatementImpl extends MinimalEObjectImpl.Container implements TgtStatement
{
  /**
   * The default value of the '{@link #getActionCall() <em>Action Call</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionCall()
   * @generated
   * @ordered
   */
  protected static final String ACTION_CALL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getActionCall() <em>Action Call</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActionCall()
   * @generated
   * @ordered
   */
  protected String actionCall = ACTION_CALL_EDEFAULT;

  /**
   * The default value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected static final String COMMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getComment() <em>Comment</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComment()
   * @generated
   * @ordered
   */
  protected String comment = COMMENT_EDEFAULT;

  /**
   * The cached value of the '{@link #getStep() <em>Step</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStep()
   * @generated
   * @ordered
   */
  protected TgtStep step;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TgtStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TestPackage.Literals.TGT_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getActionCall()
  {
    return actionCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setActionCall(String newActionCall)
  {
    String oldActionCall = actionCall;
    actionCall = newActionCall;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestPackage.TGT_STATEMENT__ACTION_CALL, oldActionCall, actionCall));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getComment()
  {
    return comment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setComment(String newComment)
  {
    String oldComment = comment;
    comment = newComment;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestPackage.TGT_STATEMENT__COMMENT, oldComment, comment));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TgtStep getStep()
  {
    return step;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStep(TgtStep newStep, NotificationChain msgs)
  {
    TgtStep oldStep = step;
    step = newStep;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TestPackage.TGT_STATEMENT__STEP, oldStep, newStep);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStep(TgtStep newStep)
  {
    if (newStep != step)
    {
      NotificationChain msgs = null;
      if (step != null)
        msgs = ((InternalEObject)step).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TestPackage.TGT_STATEMENT__STEP, null, msgs);
      if (newStep != null)
        msgs = ((InternalEObject)newStep).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TestPackage.TGT_STATEMENT__STEP, null, msgs);
      msgs = basicSetStep(newStep, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TestPackage.TGT_STATEMENT__STEP, newStep, newStep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TestPackage.TGT_STATEMENT__STEP:
        return basicSetStep(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TestPackage.TGT_STATEMENT__ACTION_CALL:
        return getActionCall();
      case TestPackage.TGT_STATEMENT__COMMENT:
        return getComment();
      case TestPackage.TGT_STATEMENT__STEP:
        return getStep();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TestPackage.TGT_STATEMENT__ACTION_CALL:
        setActionCall((String)newValue);
        return;
      case TestPackage.TGT_STATEMENT__COMMENT:
        setComment((String)newValue);
        return;
      case TestPackage.TGT_STATEMENT__STEP:
        setStep((TgtStep)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TestPackage.TGT_STATEMENT__ACTION_CALL:
        setActionCall(ACTION_CALL_EDEFAULT);
        return;
      case TestPackage.TGT_STATEMENT__COMMENT:
        setComment(COMMENT_EDEFAULT);
        return;
      case TestPackage.TGT_STATEMENT__STEP:
        setStep((TgtStep)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TestPackage.TGT_STATEMENT__ACTION_CALL:
        return ACTION_CALL_EDEFAULT == null ? actionCall != null : !ACTION_CALL_EDEFAULT.equals(actionCall);
      case TestPackage.TGT_STATEMENT__COMMENT:
        return COMMENT_EDEFAULT == null ? comment != null : !COMMENT_EDEFAULT.equals(comment);
      case TestPackage.TGT_STATEMENT__STEP:
        return step != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (actionCall: ");
    result.append(actionCall);
    result.append(", comment: ");
    result.append(comment);
    result.append(')');
    return result.toString();
  }

} //TgtStatementImpl
